// docs/.vuepress/config.ts
import { defineConfig4CustomTheme } from "vuepress/config";
import dayjs from "dayjs";

// docs/.vuepress/config/baiduCode.ts
var baiduCode_default = "503f098e7e5b3a5b5d8c5fc2938af002";

// docs/.vuepress/config/htmlModules.ts
var htmlModule = {
  homeSidebarB: `<div style="padding: 0.95rem">
    <p style="
      color: var(--textColor);
      opacity: 0.9;
      font-size: 20px;
      font-weight: bold;
      margin: 0 0 8px 0;
    ">\u5FAE\u4FE1</p>
    <img src="./img/wechat.jpg"  style="width:100%;" />
    \u5173\u6CE8\u5FAE\u4FE1\u6216\u8005\u76F4\u63A5 <a href="https://www.wjx.top/vm/ry1jJK9.aspx" arget="_blank" >\u7559\u8A00<span><svg xmlns="https://www.wjx.top/vm/ry1jJK9.aspx" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg> <span class="sr-only">(opens new window)</span></span></a>
    </p>
    </div>`
};
var htmlModules_default = htmlModule;

// docs/.vuepress/config.ts
var DOMAIN_NAME = "xugaoyi.com";
var WEB_SITE = `https://${DOMAIN_NAME}`;
var config_default = defineConfig4CustomTheme({
  theme: "vdoing",
  locales: {
    "/": {
      lang: "zh-CN",
      title: "Coder Bruce",
      description: "web\u524D\u7AEF\u6280\u672F\u535A\u5BA2,\u4E13\u6CE8web\u524D\u7AEF\u5B66\u4E60\u4E0E\u603B\u7ED3\u3002JavaScript,js,ES6,TypeScript,vue,React,python,css3,html5,Node,git,github\u7B49\u6280\u672F\u6587\u7AE0\u3002"
    }
  },
  themeConfig: {
    nav: [
      { text: "\u9996\u9875", link: "/" },
      {
        text: "iOS\u4E13\u680F",
        link: "/web/",
        items: [
          {
            text: "iOS\u6587\u7AE0\u5206\u7C7B",
            items: [
              { text: "iOS\u7684\u524D\u751F\u4ECA\u4E16", link: "/pages/pageURLbruceyou2023/" }
            ]
          },
          {
            text: "\u5B66\u4E60\u7B14\u8BB0",
            items: [
              { text: "\u300AJavaScript\u6559\u7A0B\u300B", link: "/coderbrucenotebook/t1notebook001/" },
              { text: "\u300AJavaScript\u9AD8\u7EA7\u7A0B\u5E8F\u8BBE\u8BA1\u300B", link: "/coderbrucenotebook/t1notebook002/" },
              { text: "\u300AES6 \u6559\u7A0B\u300B", link: "/coderbrucenotebook/t1notebook003/" },
              { text: "\u300AVue\u300B", link: "/coderbrucenotebook/t1notebook004/" },
              { text: "\u300AReact\u300B", link: "/coderbrucenotebook/t1notebook005/" },
              {
                text: "\u300ATypeScript \u4ECE\u96F6\u5B9E\u73B0 axios\u300B",
                link: "/coderbrucenotebook/t1notebook006/"
              },
              {
                text: "\u300AGit\u300B",
                link: "/coderbrucenotebook/t1notebook007/"
              },
              {
                text: "TypeScript",
                link: "/pages/51afd6/"
              },
              {
                text: "JS\u8BBE\u8BA1\u6A21\u5F0F\u603B\u7ED3",
                link: "/pages/4643cd/"
              }
            ]
          }
        ]
      },
      {
        text: "Android\u4E13\u680F",
        link: "/ui/",
        items: [
          { text: "HTML", link: "/pages/8309a5b876fc95e3/" },
          { text: "CSS", link: "/pages/0a83b083bdf257cb/" }
        ]
      },
      {
        text: "\u8DE8\u5E73\u53F0\u4E13\u680F",
        link: "/technology/",
        items: [
          { text: "\u6280\u672F\u6587\u6863", link: "/pages/9a7ee40fc232253e/" },
          { text: "GitHub\u6280\u5DE7", link: "/pages/4c778760be26d8b3/" },
          { text: "Nodejs", link: "/pages/117708e0af7f0bd9/" },
          { text: "\u535A\u5BA2\u642D\u5EFA", link: "/pages/41f87d890d0a02af/" }
        ]
      },
      { text: "\u79FB\u52A8\u67B6\u6784", link: "/about/" },
      {
        text: "\u7F51\u7AD9\u6536\u85CF",
        link: "/pages/beb6c0bd8a66cea6/"
      },
      {
        text: "\u6240\u6709\u6587\u7AE0",
        link: "/archives/"
      }
    ],
    sidebarDepth: 2,
    logo: "/img/logo.png",
    searchMaxSuggestions: 10,
    lastUpdated: "\u6700\u540E\u4FEE\u6539\u65F6\u95F4",
    docsDir: "docs",
    editLinks: true,
    editLinkText: "\u7F16\u8F91",
    category: false,
    tag: false,
    sidebar: "structuring",
    author: {
      name: "Coder Bruce",
      link: "https://bruceyou.notion.site/Coder-Bruce-5a8c1717a6d048b9bcaadf95281f1159"
    },
    blogger: {
      avatar: "/img/avatar.png",
      name: "Coder Bruce",
      slogan: "\u7B2C\u4E00\u4EE3\u79FB\u52A8\u5F00\u53D1\u8005"
    },
    social: {
      icons: [
        {
          iconClass: "icon-youjian",
          title: "\u7ED9\u6211\u7559\u8A00",
          link: "mailto:bruceyou0618@gmail.com"
        },
        {
          iconClass: "icon-weixin",
          title: "GitHub",
          link: "https://www.wjx.top/vm/ry1jJK9.aspx"
        }
      ]
    },
    footer: {
      createYear: 2018,
      copyrightInfo: 'Evan Xu | <a href="https://bruceyou.notion.site/Coder-Bruce-5a8c1717a6d048b9bcaadf95281f1159/vuepress-theme-vdoing/blob/master/LICENSE" target="_blank">MIT License</a>'
    },
    extendFrontmatter: {
      author: {
        name: "Coder Bruce",
        link: "https://bruceyou.notion.site/Coder-Bruce-5a8c1717a6d048b9bcaadf95281f1159"
      }
    },
    htmlModules: htmlModules_default
  },
  head: [
    ["link", { rel: "icon", href: "/img/favicon.ico" }],
    [
      "meta",
      {
        name: "keywords",
        content: "\u524D\u7AEF\u535A\u5BA2,\u4E2A\u4EBA\u6280\u672F\u535A\u5BA2,\u524D\u7AEF,\u524D\u7AEF\u5F00\u53D1,\u524D\u7AEF\u6846\u67B6,web\u524D\u7AEF,\u524D\u7AEF\u9762\u8BD5\u9898,\u6280\u672F\u6587\u6863,\u5B66\u4E60,\u9762\u8BD5,JavaScript,js,ES6,TypeScript,vue,python,css3,html5,Node,git,github,markdown"
      }
    ],
    ["meta", { name: "baidu-site-verification", content: "7F55weZDDc" }],
    ["meta", { name: "theme-color", content: "#11a8cd" }]
  ],
  plugins: [
    [
      "sitemap",
      {
        hostname: WEB_SITE
      }
    ],
    "vuepress-plugin-baidu-autopush",
    [
      "vuepress-plugin-baidu-tongji",
      {
        hm: baiduCode_default
      }
    ],
    [
      "one-click-copy",
      {
        copySelector: ['div[class*="language-"] pre', 'div[class*="aside-code"] aside'],
        copyMessage: "\u590D\u5236\u6210\u529F",
        duration: 1e3,
        showInMobile: false
      }
    ],
    [
      "demo-block",
      {
        settings: {
          jsfiddle: false,
          codepen: true,
          horizontal: false
        }
      }
    ],
    [
      "vuepress-plugin-zooming",
      {
        selector: ".theme-vdoing-content img:not(.no-zoom)",
        options: {
          bgColor: "rgba(0,0,0,0.6)"
        }
      }
    ],
    [
      "@vuepress/last-updated",
      {
        transformer: (timestamp, lang) => {
          const date = dayjs(timestamp);
          const randomYears = Math.floor(Math.random() * 2) + 1;
          const newDate = date.subtract(randomYears, "year");
          const formattedDate = newDate.format("YYYY/MM/DD, HH:mm:ss");
          return formattedDate;
        }
      }
    ]
  ],
  markdown: {
    lineNumbers: true,
    extractHeaders: ["h2", "h3", "h4", "h5", "h6"]
  },
  extraWatchFiles: [
    ".vuepress/config.ts",
    ".vuepress/config/htmlModules.ts"
  ]
});
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,
